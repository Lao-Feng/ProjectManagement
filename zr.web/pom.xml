<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>zrweb</artifactId>
		<groupId>zr.zrpower</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>zr.web</artifactId>
	<packaging>jar</packaging>
	

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<base.path>src/main/webapp/WEB-INF/lib</base.path>
		<mybatis.version>3.4.6</mybatis.version>
		<mybatis.spring.boot>1.3.2</mybatis.spring.boot>
		<tk.mybatis>2.0.4</tk.mybatis>
		<mybatis-spring>1.3.2</mybatis-spring>
		<fastjson>1.2.49</fastjson>
		<htmlparser>2.1</htmlparser>
		<htmllexer>2.1</htmllexer>
		<sax>2.0.1</sax>
		<jotpverify>1.0</jotpverify>
		<jxl>1.0</jxl>
		<classes12>1.0</classes12>
		<sqljdbc>1.0</sqljdbc>
		<ZRpowerDbEngine>1.0</ZRpowerDbEngine>
		<mysql-connector-java>5.1.46</mysql-connector-java>
		<commons-dbcp>1.4</commons-dbcp>
		<c3p0>0.9.5.2</c3p0>
		<mchange-commons-java>0.2.11</mchange-commons-java>
		<druid>1.1.10</druid>
		<spring-data-redis>1.7.11.RELEASE</spring-data-redis>
		<jedis>2.9.0</jedis>
		<commons-pool2>2.6.0</commons-pool2>
		<dom4j>1.6.1</dom4j>
		<antlr4-runtime>4.1</antlr4-runtime>
		<xssProtect>0.1</xssProtect>
		<commons-io>2.5</commons-io>
		<commons-fileupload>1.3.3</commons-fileupload>
		<commons-codec>1.11</commons-codec>
		<commons-httpclient>3.1</commons-httpclient>
		<httpclient>4.5.6</httpclient>
		<jstl>1.2</jstl>
		<aspectjweaver>1.8.8</aspectjweaver>
		<nekohtml>1.9.22</nekohtml>
		<spring-boot-starter-log4j2>2.0.4.RELEASE</spring-boot-starter-log4j2>
		<spring-boot-maven-plugin>1.4.2.RELEASE</spring-boot-maven-plugin>
	</properties>
	

	<dependencies>
		

		<!-- 加载模块 -->
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.sys</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.query</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.collen</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.analy</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.flowen</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>zr.zrpower</groupId>
			<artifactId>zr.shiro</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- spring boot starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<!-- 排除自带的logback依赖 -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-integration</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>classes12</artifactId>
			<version>${classes12}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/classes12.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.zrpower</groupId>
			<artifactId>sqljdbc</artifactId>
			<version>${sqljdbc}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/sqljdbc.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.zrpower</groupId>
			<artifactId>ZRpowerDbEngine</artifactId>
			<version>${ZRpowerDbEngine}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/ZRpowerDbEngine.jar</systemPath>
		</dependency>

		<!-- 防止Xss跨域攻击 -->
		<dependency>
			<groupId>com.zrpower</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>${antlr4-runtime}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/antlr4-runtime-4.1.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.zrpower</groupId>
			<artifactId>xssProtect</artifactId>
			<version>${xssProtect}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/xssProtect-0.1.jar</systemPath>
		</dependency>


		<dependency>
			<groupId>com.zrpower</groupId>
			<artifactId>jotpverify</artifactId>
			<version>${jotpverify}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/jotpverify.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>com.zrpower</groupId>
			<artifactId>jxl</artifactId>
			<version>${jxl}</version>
			<scope>system</scope>
			<!-- 本地jar的路径，相对或者绝对都可以 -->
			<systemPath>${project.basedir}/${base.path}/jxl.jar</systemPath>
		</dependency>


	</dependencies>

	<build>
		<resources>
			<!-- 打包时将jsp文件拷贝到META-INF目录下 -->
			<resource>
				<!-- 指定resources插件处理哪个目录下的资源文件 -->
				<directory>src/main/webapp</directory>
				<!--注意此次必须要放在此目录下才能被访问到 -->
				<targetPath>META-INF/resources</targetPath>
				<includes>
					<include>**/**</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/**</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<!-- resources配置解决mybatis 的mapperXml配置在java路径不被扫描的问题 -->
					<!-- <include>**/*.xml</include> -->
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<compilerArguments>
						<!-- 将本地引入的第三方jar包打包到BOOT-INF/lib目录下 -->
						<extdirs>${project.basedir}/${base.path}</extdirs>
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-maven-plugin}</version>
				<configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
				<!-- $NO-MVN-MAN-VER$
				debug sun
				<configuration> <jvmArguments> -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 
					</jvmArguments> </configuration> -->
			</plugin>
		</plugins>
	</build>
</project>
